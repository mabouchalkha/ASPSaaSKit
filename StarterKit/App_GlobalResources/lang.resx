<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="accountCreated" xml:space="preserve">
    <value>Account successfully created. Please check your inbox to confirm your email</value>
  </data>
  <data name="codeRequired" xml:space="preserve">
    <value>Code is required</value>
  </data>
  <data name="defaultError" xml:space="preserve">
    <value>Something went wrong. Please contact your administrator</value>
  </data>
  <data name="emailConfirmed" xml:space="preserve">
    <value>Email confirmed. Please now logging</value>
  </data>
  <data name="emailConfirmedNeedPassword" xml:space="preserve">
    <value>Email confirmed successfully. We sent you an email to reset your password</value>
  </data>
  <data name="emailRequired" xml:space="preserve">
    <value>Email address is required</value>
  </data>
  <data name="entityNotFound" xml:space="preserve">
    <value>Cannot retrieve entity with id {0}</value>
  </data>
  <data name="firstNameRequired" xml:space="preserve">
    <value>First name is required</value>
  </data>
  <data name="idRequired" xml:space="preserve">
    <value>Id is required</value>
  </data>
  <data name="importantException" xml:space="preserve">
    <value>An important exception has been thrown. Thanks for contacting your administrator</value>
  </data>
  <data name="inviteNoEmail" xml:space="preserve">
    <value>You need to pass at least one email</value>
  </data>
  <data name="inviteSuccess" xml:space="preserve">
    <value>Users will receive an email to confirm their password</value>
  </data>
  <data name="lastNameRequired" xml:space="preserve">
    <value>Last name is required</value>
  </data>
  <data name="loggedIn" xml:space="preserve">
    <value>You are now logged in</value>
  </data>
  <data name="loginConfirmEmail" xml:space="preserve">
    <value>You need to confirm your email before you can log in</value>
  </data>
  <data name="modelUpdateSuccess" xml:space="preserve">
    <value>successfully updated</value>
  </data>
  <data name="passwordLength" xml:space="preserve">
    <value>Password must be between 2 and 6 characters</value>
  </data>
  <data name="passwordMatch" xml:space="preserve">
    <value>Password confirmation does not match the password</value>
  </data>
  <data name="passwordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="passwordReseted" xml:space="preserve">
    <value>Password reseted, please check your email</value>
  </data>
  <data name="resendTwoFactor" xml:space="preserve">
    <value>A new code has been sent to you. Please check your email</value>
  </data>
  <data name="tenant" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="tenantCantEdit" xml:space="preserve">
    <value>You cannot edit an account that you are not part of</value>
  </data>
  <data name="tenantNameRequired" xml:space="preserve">
    <value>Account name is required</value>
  </data>
  <data name="twoFactorEnable" xml:space="preserve">
    <value>2 factor authentication is enable, please check your email</value>
  </data>
  <data name="user" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="userCantRead" xml:space="preserve">
    <value>Cant find user with ID {0}</value>
  </data>
  <data name="userCreated" xml:space="preserve">
    <value>User created successfully</value>
  </data>
  <data name="userDeleted" xml:space="preserve">
    <value>User successfully deleted</value>
  </data>
  <data name="userDeleteSelf" xml:space="preserve">
    <value>You cannot delete your own account</value>
  </data>
</root>